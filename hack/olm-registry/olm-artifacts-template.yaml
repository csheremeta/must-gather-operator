apiVersion: v1
kind: Template
parameters:
- name: REGISTRY_IMG
  required: true
- name: CHANNEL
  required: true
- name: IMAGE_TAG
  required: true
- name: REPO_NAME
  value: must-gather-operator
  required: true
metadata:
  name: selectorsyncset-template
objects:
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: must-gather-operator
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
    resourceApplyMode: Sync
    resources:
    - apiVersion: v1
      kind: Namespace
      metadata:
        name: openshift-must-gather-operator
        labels:
          openshift.io/cluster-monitoring: 'true'
    - kind: ClusterRole
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: must-gather-operator
      rules:
      - apiGroups:
        - ''
        resources:
        - configmaps
        - pods
        verbs:
        - '*'
      - apiGroups:
        - ''
        resources:
        - services
        - services/finalizers
        verbs:
        - '*'
      - apiGroups:
        - apps
        resources:
        - replicasets
        - deployments
        verbs:
        - get
        - list
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - servicemonitors
        verbs:
        - '*'
      - apiGroups:
        - apps
        resources:
        - deployments/finalizers
        resourceNames:
        - must-gather-operator
        verbs:
        - update
      - apiGroups:
        - managed.openshift.io
        resources:
        - mustgathers
        - mustgathers/finalizers
        - mustgathers/status
        verbs:
        - '*'
      - apiGroups:
        - batch
        resources:
        - jobs
        verbs:
        - '*'
      - apiGroups:
        - ''
        resources:
        - events
        verbs:
        - '*'
      - apiGroups:
        - ''
        resources:
        - secrets
        verbs:
        - get
        - delete
        - create
        - list
        - watch
      - apiGroups:
        - config.openshift.io
        resources:
        - proxies
        verbs:
        - get
        - list
        resourceNames:
        - cluster
      - apiGroups:
        - ''
        resources:
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: must-gather-operator
      subjects:
      - kind: ServiceAccount
        name: must-gather-operator
        namespace: openshift-must-gather-operator
      roleRef:
        kind: ClusterRole
        name: must-gather-operator
        apiGroup: rbac.authorization.k8s.io
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: must-gather-admin
      roleRef:
        kind: ClusterRole
        name: cluster-admin
        apiGroup: rbac.authorization.k8s.io
      subjects:
      - kind: ServiceAccount
        name: must-gather-admin
        namespace: openshift-must-gather-operator
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s
        namespace: openshift-must-gather-operator
      rules:
      - apiGroups:
        - ''
        resources:
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s
        namespace: openshift-must-gather-operator
      roleRef:
        kind: Role
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: openshift-monitoring
    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        labels:
          opsrc-datastore: 'true'
          opsrc-provider: redhat
        name: ${REPO_NAME}-registry
        namespace: openshift-${REPO_NAME}
      spec:
        image: ${REGISTRY_IMG}:${CHANNEL}-${IMAGE_TAG}
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/infra
                  operator: Exists
              weight: 1
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
        displayName: ${REPO_NAME}
        icon:
          base64data: ''
          mediatype: ''
        publisher: Red Hat
        sourceType: grpc
    - apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
      spec:
        targetNamespaces:
        - openshift-${REPO_NAME}
    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ${REPO_NAME}
        namespace: openshift-${REPO_NAME}
      spec:
        channel: ${CHANNEL}
        name: ${REPO_NAME}
        source: ${REPO_NAME}-registry
        sourceNamespace: openshift-${REPO_NAME}
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: must-gather-operator-crds
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
    resourceApplyMode: Sync
    resources:
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: mustgathers.managed.openshift.io
      spec:
        group: managed.openshift.io
        names:
          kind: MustGather
          listKind: MustGatherList
          plural: mustgathers
          singular: mustgather
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: MustGather is the Schema for the mustgathers API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: MustGatherSpec defines the desired state of MustGather
                properties:
                  caseID:
                    description: The is of the case this must gather will be uploaded
                      to
                    type: string
                  caseManagementAccountSecretRef:
                    description: the secret container a username and password field
                      to be used to authenticate with red hat case management systems
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  mustGatherImages:
                    description: 'The list of must gather images to run, optional,
                      it will default to: $DEFAULT_MUST_GATHER_IMAGE'
                    items:
                      type: string
                    type: array
                  proxyConfig:
                    description: This represents the proxy configuration to be used.
                      If left empty it will default to the cluster-level proxy configuration.
                    properties:
                      httpProxy:
                        description: httpProxy is the URL of the proxy for HTTP requests.  Empty
                          means unset and will not result in an env var.
                        type: string
                      httpsProxy:
                        description: httpsProxy is the URL of the proxy for HTTPS
                          requests.  Empty means unset and will not result in an env
                          var.
                        type: string
                      noProxy:
                        description: noProxy is the list of domains for which the
                          proxy should not be used.  Empty means unset and will not
                          result in an env var.
                        type: string
                    type: object
                  serviceAccountRef:
                    description: the service account to use to run the must gather
                      job pod, defaults to default  +kubebuilder:default:="{Name:default}"
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                required:
                - caseID
                - caseManagementAccountSecretRef
                type: object
              status:
                description: MustGatherStatus defines the observed state of MustGather
                properties:
                  completed:
                    type: boolean
                  lastUpdate:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    enum:
                    - Success
                    - Failure
                    type: string
                required:
                - completed
                type: object
            type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
